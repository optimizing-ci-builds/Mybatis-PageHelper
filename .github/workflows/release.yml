name: Publish package to the Maven Central Repository
on: [push]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/Mybatis-PageHelper/Mybatis-PageHelper/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
      - run: touch starting_publish_uses-checkout_9
      - run: rm starting_publish_uses-checkout_9
      - uses: actions/checkout@v3
      - run: touch starting_publish_SetupMavenCentralRepository_10
      - run: rm starting_publish_SetupMavenCentralRepository_10
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - run: touch starting_publish_Publishpackage_23
      - run: rm starting_publish_Publishpackage_23
      - name: Publish package
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        run: mvn --batch-mode -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -P release clean deploy
      - run: touch starting_finished_finished_8979874
        if: always()
      - run: rm starting_finished_finished_8979874
        if: always()
      - name: rat check
        if: always()
        run: |
           if [ -f /home/runner/work/Mybatis-PageHelper/Mybatis-PageHelper/target/rat.txt ]; then cat /home/runner/work/Mybatis-PageHelper/Mybatis-PageHelper/target/rat.txt; fi
      - name: Check script file exists and execute
        if: always()
        run: |
          [ -f .github/workflows/script.py ] && python .github/workflows/script.py
          [ -f /home/runner/work/Mybatis-PageHelper/Mybatis-PageHelper/optimizing-ci-builds-ci-analysis/job.csv ] || mkdir -p /home/runner/work/Mybatis-PageHelper/Mybatis-PageHelper/optimizing-ci-builds-ci-analysis/; echo "${GITHUB_RUN_ID},${GITHUB_JOB},Mybatis-PageHelper,${GITHUB_WORKFLOW}" > /home/runner/work/Mybatis-PageHelper/Mybatis-PageHelper/optimizing-ci-builds-ci-analysis/job.csv
      - name: Checkout to destination CI-analyzes repo
        uses: actions/checkout@v3
        if: always()
        with:
          path: Mybatis-PageHelper
          ref: '1686796520-548a464'
          repository: 'UT-SE-Research/ci-analyzes'
          token: '${{ secrets.API_TOKEN_GITHUB }}'
          persist-credentials: true
      - name: Copy files to push to another directory
        if: always()
        run: |
          mkdir -p Mybatis-PageHelper/Mybatis-PageHelper/.github/workflows/release/publish
          cp -rvT optimizing-ci-builds-ci-analysis Mybatis-PageHelper/Mybatis-PageHelper/.github/workflows/release/publish
      - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1686796520-548a464/Mybatis-PageHelper/.github/workflows/release/publish
      - name: Pushes analysis to another repository
        if: always()
        working-directory: Mybatis-PageHelper
        run: |
          commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
          git config --global user.name 'UT-SE-Research'
          git config --global user.email '${{ secrets.EMAIL }}'
          git add .
          git commit -m $commit_message
          while ! git push origin 1686796520-548a464; do
            git pull --rebase origin 1686796520-548a464
            sleep $((RANDOM % 5 + 1))
          done